The general idea of inheritance

is implemented differently in different languages.

But for our purposes we only need to understand the most basic concept.

That one object gets access to the properties and methods of another object.
-----------------------------------------------

We also know that the JavaScript engine adds hidden properties and methods to

things or properties and methods that we normally don't interact with directly.

All objects In JavaScript, and that includes functions.

All objects have a prototype property.

The property is simply a reference to another object, we'll call it proto.

It's an object that stands on its own, we could use it by itself if we wanted to.

But the object property that we'll call proto, that's it's prototype.

-----------------------------------------------
In javascript there is a concept called prototype chain :

every object can have a hiden propert prop{} and when we call a property using dot operator javascript engine looks for it in the object and if it doesnt find it it will got down the prtotype chain and if finds it returns it.

Also if the object is refernaced by another object then that object can also reference to the prop of object it is pointing to 

It is different from scope chain , we saw an example where we are using __prop__ to see and understand it , but never try to do this because it will 
affect the performance of the engine.

---------------------------
