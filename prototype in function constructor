If I have 1,000 of these person objects, I'll have 1,000 getFullName methods.

But if I add it to the prototype, I'll only have one.

Even though I have 1,000 objects, I only have this method once.

So, from a efficiency standpoint, it's better to put your

methods on the prototype because they only need one copy to be used.


function person(firstname, lastname) {
  console.log(this);
  // this is an empty object righ now and we will feed the values after this line 
  
  this.firstname = firstname;
  this.lastname = lastname;

  console.log("properties are now added to this " + this.firstname);
}

var ayush = new person("ayush", "joshi");
var kush = new person("kush", "Joshi");

// here new keyword retrun an empty object
console.log(ayush);

person.prototype.getfullname = function (firstname, lastname) {
  return firstname + " " + lastname;
};

// above we added the property using prototype because it jut has one single copy for all the object 
// but if we put tha on the functin constructor then for every objsct it will store the memory 

console.log(ayush.getfullname("joshi", "ayush"));
console.log(kush.getfullname("joshi", "Kush"));
